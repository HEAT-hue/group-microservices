server:
  port: 8082

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true
    enabled: true

rabbitmq:
  # Define the exchange
  exchanges:
    internal: internal.exchange
  # Define a queue that is attached to the internal-exchange
  queue:
    notification: notification.queue
  # Define a routing key that routes massages to the notification queue
  routing-keys:
    internal-notification: internal.notification.routing-key

spring:
  application:
    name: notification

  datasource:
    url: jdbc:postgresql://localhost:5432/notification
    username: user
    password: password
    driverClassName: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10  # Optional: controls connection pool size

  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true  # Optional: formats SQL queries in the log
    show-sql: true  # Optional: shows SQL queries in the console

  # Show logs in colored mode
  output:
    ansi:
      enabled: ALWAYS
  rabbitmq:
    addresses: localhost:5672


management:
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: prometheus
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"